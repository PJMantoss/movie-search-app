{"version":3,"sources":["components/MovieCard.js","components/SearchMovies.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","isLoading","setIsLoading","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","error","onSubmit","htmlFor","type","name","value","onChange","target","placeholder","required","filter","map","id","Footer","href","App","state","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAqBeA,MAnBf,YAA4B,IAARC,EAAO,EAAPA,MAEhB,OACQ,sBAAKC,UAAU,OAAf,UACI,qBACIA,UAAU,cACVC,IAAG,0DAAqDF,EAAMG,aAC9DC,IAAKJ,EAAMK,MAAQ,YAEvB,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,mDAAsBL,EAAMM,kBAC/B,4BAAG,6CAAgBN,EAAMO,kBACzB,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,kBCwCtCC,MApDf,WAAuB,MAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAISF,mBAAS,IAJlB,mBAIZG,EAJY,KAIJC,EAJI,OAMeJ,oBAAS,GANxB,mBAMZK,EANY,KAMDC,EANC,KAQbC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBACFJ,GAAa,GAEPK,EAJW,kHAIsGV,EAJtG,iDAOKW,MAAMD,GAPX,cAOPE,EAPO,gBAQMA,EAAIC,OARV,OAQPC,EARO,OAUbX,EAAUW,EAAKC,SACfV,GAAa,GAXA,kDAabW,QAAQC,MAAR,MAba,0DAAH,sDAiBlB,OACI,gCACI,uBAAM3B,UAAU,OAAO4B,SAAUZ,EAAjC,UACI,uBAAOhB,UAAU,QAAQ6B,QAAQ,QAAjC,yBACA,uBACI7B,UAAU,QACV8B,KAAK,OACLC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAAChB,GAAD,OAAON,EAASM,EAAEiB,OAAOF,QACnCG,YAAY,iCACZC,UAAQ,IAEZ,uBAAOpC,UAAU,cAAc8B,KAAK,SAASE,MAAM,cAGvD,qBAAKhC,UAAU,aAAf,SACKc,EAAY,wDAAkCF,EAAOyB,QAAO,SAAAtC,GAAK,OAAIA,EAAMG,eAAaoC,KAAI,SAAAvC,GAAK,OAC/C,OAA/C,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMwC,IACpC,uDACA,cAAC,EAAD,CAAWxC,MAAOA,GAAYA,EAAMwC,a,KC9BzCC,MAff,WACI,OACI,mCACI,4BAAG,oDACH,+CAEA,sBAAKD,GAAG,OAAR,UACI,6CACA,qBAAKtC,IAAI,iDAAiDE,IAAI,SAC9D,uCAAS,mBAAGsC,KAAK,+BAA+BP,OAAO,SAA9C,+BCWVQ,E,kDAjBb,aAAc,IAAD,8BACX,gBACKC,MAAQ,GAFF,E,qDAMX,OACE,sBAAK3C,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAXU4C,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.357280ed.chunk.js","sourcesContent":["import React from 'react';\n\nfunction MovieCard({movie}){\n\n    return (\n            <div className=\"card\">\n                <img \n                    className=\"card--image\" \n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \n                    alt={movie.title + ' poster'} \n                />\n                <div className=\"card--content\">\n                    <h3 className=\"card--title\">{movie.title}</h3>\n                    <p><small>RELEASE DATE: {movie.release_date}</small></p>\n                    <p><small>RATING: {movie.vote_average}</small></p>\n                    <p className=\"card--desc\">{movie.overview}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default MovieCard;","import React, { useState } from 'react';\nimport MovieCard from './MovieCard';\n\nfunction SearchMovies(){\n    //state for input query\n    const [query, setQuery] = useState('');\n    //state for movies\n    const [movies, setMovies] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=9b9e25dbc1c45abfea8f24e2af2091ff&language=en-US&query=${query}&page=1&include_adult=false`;\n\n        try{\n            const res = await fetch(url);\n            const data = await res.json();\n            // console.log(data);\n            setMovies(data.results);\n            setIsLoading(false);\n        }catch(err){\n            console.error(err);\n        }\n    }\n\n    return(\n        <div>\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\" htmlFor=\"query\"> Movie Name</label>\n                <input \n                    className=\"input\" \n                    type=\"text\" \n                    name=\"query\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)} \n                    placeholder=\"movie name e.g Nutty Professor\"\n                    required \n                />\n                <input className=\"button type\" type=\"submit\" value=\"Search\"/>\n            </form>\n\n            <div className=\"card--list\">\n                {isLoading ? <h1>Loading... Please wait</h1> : movies.filter(movie => movie.poster_path).map(movie => (\n                    <MovieCard movie={movie} key={movie.id} /> === null ? \n                    <h1>Sorry Movie Not Found</h1> : \n                    <MovieCard movie={movie} key={movie.id} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchMovies;","import React from 'react';\nimport '../App.css'\n\nfunction Footer(){\n    return (\n        <footer>\n            <p><strong>Movie Search</strong></p>\n            <p>Copyright 2020</p>\n\n            <div id=\"love\">\n                <span>Made With</span>\n                <img src=\"https://img.icons8.com/dusk/64/000000/like.png\" alt=\"love\"/> \n                <span>by <a href=\"https://github.com/PJMantoss\" target=\"_blank\">Mantoss</a></span>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport SearchMovies from './components/SearchMovies';\nimport Footer from './components/Footer';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {};\n  }\n\n  render(){\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">React Movie Search</h1>\n        <SearchMovies />\n        <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}